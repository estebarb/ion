{
  "name": "Ion",
  "tagline": "",
  "body": "# Ion Web Framework\r\n[![GoDoc](https://godoc.org/github.com/estebarb/ion?status.svg)](http://godoc.org/github.com/estebarb/ion)\r\n[![Build Status](https://travis-ci.org/estebarb/ion.svg?branch=master)](https://travis-ci.org/estebarb/ion)\r\n\r\n\r\nIon is a small web framework for people in a hurry.\r\nIon provides a flexible router (gorilla/mux),\r\na integrated middleware support (justinas/alice), automatic\r\ncontext support and some handful helpers.\r\n\r\nA short example:\r\n\r\n\tpackage main\r\n\r\n\timport (\r\n\t\t\"fmt\"\r\n\t\t\"github.com/estebarb/ion\"\r\n\t\t\"net/http\"\r\n\t)\r\n\r\n\tfunc hello(w http.ResponseWriter, r *http.Request) {\r\n\t\tvalue := ion.URLArgs(r, \"name\")\r\n\t\tif value != \"\" {\r\n\t\t\tfmt.Fprintf(w, \"Hello, %v!\", value)\r\n\t\t} else {\r\n\t\t\tfmt.Fprint(w, \"Hello world!\")\r\n\t\t}\r\n\t}\r\n\r\n\tfunc main() {\r\n\t\tr := ion.NewRouter()\r\n\t\tr.GetFunc(\"/\", hello)\r\n\t\tr.GetFunc(\"/{name}\", hello)\r\n\t\thttp.ListenAndServe(\":8080\", r)\r\n\t}\r\n\t\r\nAt this point the framework is highly experimental, so please don't\r\nuse it in production for now... I'm planning to add more features,\r\nbut maybe I will break things. Don't say I don't tell you! :p\r\n\r\n## License\r\n\r\nIon is released under the MIT License, as specified in LICENSE.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}